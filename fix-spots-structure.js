// Script de r√©paration de la structure des spots
// √Ä ex√©cuter dans la console du navigateur (F12)

console.log('üîß D√©but de la r√©paration de la structure des spots...');

// Fonction pour r√©parer la structure des spots
function fixSpotsStructure() {
    try {
        // R√©cup√©rer les projets depuis localStorage
        const savedProjects = localStorage.getItem('ninjalinking-projects');
        if (!savedProjects) {
            console.log('‚ùå Aucun projet trouv√© dans localStorage');
            return;
        }
        
        let projects = JSON.parse(savedProjects);
        console.log(`üìä ${projects.length} projets trouv√©s`);
        
        let fixed = 0;
        
        projects.forEach((project, index) => {
            console.log(`üîç V√©rification du projet ${index + 1}: "${project.name}"`);
            
            // V√©rifier si le projet a une structure spots
            if (!project.spots) {
                console.log(`‚ö° Initialisation des spots pour "${project.name}"`);
                project.spots = [];
                fixed++;
            } else if (!Array.isArray(project.spots)) {
                console.log(`üîß R√©paration de la structure spots pour "${project.name}"`);
                project.spots = [];
                fixed++;
            } else {
                console.log(`‚úÖ Projet "${project.name}" a d√©j√† ${project.spots.length} spots`);
            }
            
            // S'assurer que les autres champs existent
            if (!project.keywords) {
                project.keywords = [];
            }
            if (!project.budget) {
                project.budget = 0;
            }
        });
        
        // Sauvegarder les projets r√©par√©s
        localStorage.setItem('ninjalinking-projects', JSON.stringify(projects));
        
        console.log(`‚úÖ R√©paration termin√©e: ${fixed} projets r√©par√©s`);
        console.log('üîÑ Rechargez la page pour voir les changements');
        
        return projects;
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la r√©paration:', error);
    }
}

// Ex√©cuter la r√©paration
const repairedProjects = fixSpotsStructure();

// Afficher un r√©sum√©
if (repairedProjects) {
    console.log('üìã R√©sum√© des projets r√©par√©s:');
    repairedProjects.forEach(project => {
        console.log(`- ${project.name}: ${project.spots.length} spots, ${project.keywords.length} mots-cl√©s`);
    });
}

